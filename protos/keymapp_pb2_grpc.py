# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import keymapp_pb2 as protos_dot_keymapp__pb2

GRPC_GENERATED_VERSION = '1.64.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in protos/keymapp_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class KeyboardServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStatus = channel.unary_unary(
                '/api.KeyboardService/GetStatus',
                request_serializer=protos_dot_keymapp__pb2.GetStatusRequest.SerializeToString,
                response_deserializer=protos_dot_keymapp__pb2.GetStatusReply.FromString,
                _registered_method=True)
        self.GetKeyboards = channel.unary_unary(
                '/api.KeyboardService/GetKeyboards',
                request_serializer=protos_dot_keymapp__pb2.GetKeyboardsRequest.SerializeToString,
                response_deserializer=protos_dot_keymapp__pb2.GetKeyboardsReply.FromString,
                _registered_method=True)
        self.ConnectKeyboard = channel.unary_unary(
                '/api.KeyboardService/ConnectKeyboard',
                request_serializer=protos_dot_keymapp__pb2.ConnectKeyboardRequest.SerializeToString,
                response_deserializer=protos_dot_keymapp__pb2.ConnectKeyboardReply.FromString,
                _registered_method=True)
        self.ConnectAnyKeyboard = channel.unary_unary(
                '/api.KeyboardService/ConnectAnyKeyboard',
                request_serializer=protos_dot_keymapp__pb2.ConnectAnyKeyboardRequest.SerializeToString,
                response_deserializer=protos_dot_keymapp__pb2.ConnectKeyboardReply.FromString,
                _registered_method=True)
        self.DisconnectKeyboard = channel.unary_unary(
                '/api.KeyboardService/DisconnectKeyboard',
                request_serializer=protos_dot_keymapp__pb2.DisconnectKeyboardRequest.SerializeToString,
                response_deserializer=protos_dot_keymapp__pb2.DisconnectKeyboardReply.FromString,
                _registered_method=True)
        self.SetLayer = channel.unary_unary(
                '/api.KeyboardService/SetLayer',
                request_serializer=protos_dot_keymapp__pb2.SetLayerRequest.SerializeToString,
                response_deserializer=protos_dot_keymapp__pb2.SetLayerReply.FromString,
                _registered_method=True)
        self.UnsetLayer = channel.unary_unary(
                '/api.KeyboardService/UnsetLayer',
                request_serializer=protos_dot_keymapp__pb2.SetLayerRequest.SerializeToString,
                response_deserializer=protos_dot_keymapp__pb2.SetLayerReply.FromString,
                _registered_method=True)
        self.SetRGBLed = channel.unary_unary(
                '/api.KeyboardService/SetRGBLed',
                request_serializer=protos_dot_keymapp__pb2.SetRGBLedRequest.SerializeToString,
                response_deserializer=protos_dot_keymapp__pb2.SetRGBLedReply.FromString,
                _registered_method=True)
        self.SetRGBAll = channel.unary_unary(
                '/api.KeyboardService/SetRGBAll',
                request_serializer=protos_dot_keymapp__pb2.SetRGBAllRequest.SerializeToString,
                response_deserializer=protos_dot_keymapp__pb2.SetRGBAllReply.FromString,
                _registered_method=True)
        self.SetStatusLed = channel.unary_unary(
                '/api.KeyboardService/SetStatusLed',
                request_serializer=protos_dot_keymapp__pb2.SetStatusLedRequest.SerializeToString,
                response_deserializer=protos_dot_keymapp__pb2.SetStatusLedReply.FromString,
                _registered_method=True)
        self.IncreaseBrightness = channel.unary_unary(
                '/api.KeyboardService/IncreaseBrightness',
                request_serializer=protos_dot_keymapp__pb2.IncreaseBrightnessRequest.SerializeToString,
                response_deserializer=protos_dot_keymapp__pb2.BrightnessUpdateReply.FromString,
                _registered_method=True)
        self.DecreaseBrightness = channel.unary_unary(
                '/api.KeyboardService/DecreaseBrightness',
                request_serializer=protos_dot_keymapp__pb2.DecreaseBrightnessRequest.SerializeToString,
                response_deserializer=protos_dot_keymapp__pb2.BrightnessUpdateReply.FromString,
                _registered_method=True)


class KeyboardServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKeyboards(self, request, context):
        """Returns a list of all detected keyboards.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectKeyboard(self, request, context):
        """Connects to a keyboard using given an id retrieved from GetKeyboards.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectAnyKeyboard(self, request, context):
        """Connects to the first available keyboard.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectKeyboard(self, request, context):
        """Disconnects to a keyboard using given an id retrieved from GetKeyboards.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLayer(self, request, context):
        """Sets the active layer of a connected keyboard.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnsetLayer(self, request, context):
        """Unsets a previously set layer.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRGBLed(self, request, context):
        """Sets the color of a specific LED on the keyboard.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRGBAll(self, request, context):
        """Sets the color of all LEDs on the keyboard.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetStatusLed(self, request, context):
        """Sets the status LED on the keyboard.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IncreaseBrightness(self, request, context):
        """Increases the brightness of the keyboard.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DecreaseBrightness(self, request, context):
        """Decreases the brightness of the keyboard.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KeyboardServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=protos_dot_keymapp__pb2.GetStatusRequest.FromString,
                    response_serializer=protos_dot_keymapp__pb2.GetStatusReply.SerializeToString,
            ),
            'GetKeyboards': grpc.unary_unary_rpc_method_handler(
                    servicer.GetKeyboards,
                    request_deserializer=protos_dot_keymapp__pb2.GetKeyboardsRequest.FromString,
                    response_serializer=protos_dot_keymapp__pb2.GetKeyboardsReply.SerializeToString,
            ),
            'ConnectKeyboard': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectKeyboard,
                    request_deserializer=protos_dot_keymapp__pb2.ConnectKeyboardRequest.FromString,
                    response_serializer=protos_dot_keymapp__pb2.ConnectKeyboardReply.SerializeToString,
            ),
            'ConnectAnyKeyboard': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectAnyKeyboard,
                    request_deserializer=protos_dot_keymapp__pb2.ConnectAnyKeyboardRequest.FromString,
                    response_serializer=protos_dot_keymapp__pb2.ConnectKeyboardReply.SerializeToString,
            ),
            'DisconnectKeyboard': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectKeyboard,
                    request_deserializer=protos_dot_keymapp__pb2.DisconnectKeyboardRequest.FromString,
                    response_serializer=protos_dot_keymapp__pb2.DisconnectKeyboardReply.SerializeToString,
            ),
            'SetLayer': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLayer,
                    request_deserializer=protos_dot_keymapp__pb2.SetLayerRequest.FromString,
                    response_serializer=protos_dot_keymapp__pb2.SetLayerReply.SerializeToString,
            ),
            'UnsetLayer': grpc.unary_unary_rpc_method_handler(
                    servicer.UnsetLayer,
                    request_deserializer=protos_dot_keymapp__pb2.SetLayerRequest.FromString,
                    response_serializer=protos_dot_keymapp__pb2.SetLayerReply.SerializeToString,
            ),
            'SetRGBLed': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRGBLed,
                    request_deserializer=protos_dot_keymapp__pb2.SetRGBLedRequest.FromString,
                    response_serializer=protos_dot_keymapp__pb2.SetRGBLedReply.SerializeToString,
            ),
            'SetRGBAll': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRGBAll,
                    request_deserializer=protos_dot_keymapp__pb2.SetRGBAllRequest.FromString,
                    response_serializer=protos_dot_keymapp__pb2.SetRGBAllReply.SerializeToString,
            ),
            'SetStatusLed': grpc.unary_unary_rpc_method_handler(
                    servicer.SetStatusLed,
                    request_deserializer=protos_dot_keymapp__pb2.SetStatusLedRequest.FromString,
                    response_serializer=protos_dot_keymapp__pb2.SetStatusLedReply.SerializeToString,
            ),
            'IncreaseBrightness': grpc.unary_unary_rpc_method_handler(
                    servicer.IncreaseBrightness,
                    request_deserializer=protos_dot_keymapp__pb2.IncreaseBrightnessRequest.FromString,
                    response_serializer=protos_dot_keymapp__pb2.BrightnessUpdateReply.SerializeToString,
            ),
            'DecreaseBrightness': grpc.unary_unary_rpc_method_handler(
                    servicer.DecreaseBrightness,
                    request_deserializer=protos_dot_keymapp__pb2.DecreaseBrightnessRequest.FromString,
                    response_serializer=protos_dot_keymapp__pb2.BrightnessUpdateReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.KeyboardService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.KeyboardService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class KeyboardService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.KeyboardService/GetStatus',
            protos_dot_keymapp__pb2.GetStatusRequest.SerializeToString,
            protos_dot_keymapp__pb2.GetStatusReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetKeyboards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.KeyboardService/GetKeyboards',
            protos_dot_keymapp__pb2.GetKeyboardsRequest.SerializeToString,
            protos_dot_keymapp__pb2.GetKeyboardsReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConnectKeyboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.KeyboardService/ConnectKeyboard',
            protos_dot_keymapp__pb2.ConnectKeyboardRequest.SerializeToString,
            protos_dot_keymapp__pb2.ConnectKeyboardReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConnectAnyKeyboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.KeyboardService/ConnectAnyKeyboard',
            protos_dot_keymapp__pb2.ConnectAnyKeyboardRequest.SerializeToString,
            protos_dot_keymapp__pb2.ConnectKeyboardReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DisconnectKeyboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.KeyboardService/DisconnectKeyboard',
            protos_dot_keymapp__pb2.DisconnectKeyboardRequest.SerializeToString,
            protos_dot_keymapp__pb2.DisconnectKeyboardReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetLayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.KeyboardService/SetLayer',
            protos_dot_keymapp__pb2.SetLayerRequest.SerializeToString,
            protos_dot_keymapp__pb2.SetLayerReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnsetLayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.KeyboardService/UnsetLayer',
            protos_dot_keymapp__pb2.SetLayerRequest.SerializeToString,
            protos_dot_keymapp__pb2.SetLayerReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetRGBLed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.KeyboardService/SetRGBLed',
            protos_dot_keymapp__pb2.SetRGBLedRequest.SerializeToString,
            protos_dot_keymapp__pb2.SetRGBLedReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetRGBAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.KeyboardService/SetRGBAll',
            protos_dot_keymapp__pb2.SetRGBAllRequest.SerializeToString,
            protos_dot_keymapp__pb2.SetRGBAllReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetStatusLed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.KeyboardService/SetStatusLed',
            protos_dot_keymapp__pb2.SetStatusLedRequest.SerializeToString,
            protos_dot_keymapp__pb2.SetStatusLedReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IncreaseBrightness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.KeyboardService/IncreaseBrightness',
            protos_dot_keymapp__pb2.IncreaseBrightnessRequest.SerializeToString,
            protos_dot_keymapp__pb2.BrightnessUpdateReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DecreaseBrightness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.KeyboardService/DecreaseBrightness',
            protos_dot_keymapp__pb2.DecreaseBrightnessRequest.SerializeToString,
            protos_dot_keymapp__pb2.BrightnessUpdateReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
